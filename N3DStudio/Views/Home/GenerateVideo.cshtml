@model ElevenLabsVoicesResponse

<h2>Choose Voice</h2>

<form id="speechForm" method="post" action="/Speech/GenerateSpeech">
    <label for="voiceId">Select Voice:</label>
    <select id="voiceId" name="voiceId" required>
        @foreach (var voice in Model.Voices)
        {
            <option value="@voice.VoiceId">@voice.Name (@voice.Labels.Accent - @voice.Labels.Gender)</option>
        }
    </select>

    <label for="text">Enter Text:</label>
    <textarea id="text" name="text">This is an autogenerated script based on images.</textarea>

    <button type="submit">Generate Speech</button>
</form>

<h3>Preview Voices:</h3>
@foreach (var voice in Model.Voices)
{
    <div style="margin-bottom: 15px;">
        <strong>@voice.Name</strong> <small>(@voice.Labels.Description)</small>

        @if (!string.IsNullOrEmpty(voice.PreviewUrl))
        {
            <audio controls>
                <source src="@voice.PreviewUrl" type="audio/mpeg">
                Your browser does not support the audio element.
            </audio>
        }
        else
        {
            <p>No sample available.</p>
        }
    </div>
}

<h3>Generated Speech:</h3>
<audio id="audioPlayer" controls style="display: none;">
    <source id="audioSource" src="" type="audio/mpeg">
    Your browser does not support the audio element.
</audio>

<script>
    document.getElementById("speechForm").addEventListener("submit", function(event) {
        event.preventDefault();

        fetch(this.action, {
            method: "POST",
            body: new FormData(this)
        })
        .then(response => response.json())
        .then(data => {
            if (data.path) {
                document.getElementById("audioSource").src = data.path;
                document.getElementById("audioPlayer").style.display = "block";
                document.getElementById("audioPlayer").play();
            } else {
                alert("Failed to generate speech.");
            }
        });
    });
</script>
